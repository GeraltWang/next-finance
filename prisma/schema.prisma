generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  clerkId   String    @unique @map("clerk_id")
  email     String    @unique
  username  String?
  firstName String?   @map("first_name")
  lastName  String?   @map("last_name")
  photo     String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
}

model Account {
  id           String        @id @default(cuid())
  userId       String        @map("user_id")
  name         String
  plaidId      String?       @map("plaid_id")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime?     @updatedAt @map("updated_at")
  transactions Transaction[]
}

model Category {
  id           String        @id @default(cuid())
  userId       String        @map("user_id")
  name         String
  plaidId      String?       @map("plaid_id")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime?     @updatedAt @map("updated_at")
  transactions Transaction[]
}

model Transaction {
  id         String    @id @default(cuid())
  amount     Int
  payee      String
  notes      String?
  date       DateTime  @default(now())
  accountId  String    @map("account_id")
  categoryId String?   @map("category_id")
  account    Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category   Category? @relation(fields: [categoryId], references: [id])
}

model PersonalAccessToken {
  id        String    @id @default(cuid())
  userId    String    @map("user_id")
  email     String
  name      String
  token     String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
}
